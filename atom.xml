<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.lonersun.com/"/>
  <updated>2017-10-27T09:26:05.048Z</updated>
  <id>https://blog.lonersun.com/</id>
  
  <author>
    <name>Lonersun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.lonersun.com/2017/10/27/hello-world/"/>
    <id>https://blog.lonersun.com/2017/10/27/hello-world/</id>
    <published>2017-10-27T09:26:05.047Z</published>
    <updated>2017-10-27T09:26:05.048Z</updated>
    
    <content type="html"><![CDATA[<p>你好，世界！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你好，世界！&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将自己的Python代码打包放到PyPI上</title>
    <link href="https://blog.lonersun.com/2017/10/21/%E5%B0%86%E8%87%AA%E5%B7%B1%E7%9A%84Python%E4%BB%A3%E7%A0%81%E6%89%93%E5%8C%85%E6%94%BE%E5%88%B0PyPI%E4%B8%8A/"/>
    <id>https://blog.lonersun.com/2017/10/21/将自己的Python代码打包放到PyPI上/</id>
    <published>2017-10-21T11:36:08.000Z</published>
    <updated>2017-10-21T11:37:29.445Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Pip 是Python常用的包管理工具，那么怎样将自己开发的包上传到PyPI源供他人使用呢？之前做过一个基于Sphinx、MarkDown生成文档的脚本docs.lonersun.com 最近稍作整理，为提高使用体验决定将其提交到PyPI源，以此文档作为使用总结。</strong></p><h5 id="1-首先需要注册一个PyPI账号，注册链接：https-pypi-python-org-pypi-3Aaction-register-form"><a href="#1-首先需要注册一个PyPI账号，注册链接：https-pypi-python-org-pypi-3Aaction-register-form" class="headerlink" title="1. 首先需要注册一个PyPI账号，注册链接：https://pypi.python.org/pypi?%3Aaction=register_form"></a>1. 首先需要注册一个PyPI账号，注册链接：<a href="https://pypi.python.org/pypi?%3Aaction=register_form" title="https://pypi.python.org/pypi?%3Aaction=register_form" target="_blank" rel="external">https://pypi.python.org/pypi?%3Aaction=register_form</a></h5><h5 id="2-安装setuptools（当时版本为36-5-0）"><a href="#2-安装setuptools（当时版本为36-5-0）" class="headerlink" title="2. 安装setuptools（当时版本为36.5.0）"></a>2. 安装setuptools（当时版本为36.5.0）</h5><ul><li>下载ez_setup.py：<a href="https://bootstrap.pypa.io/ez_setup.py" title="https://bootstrap.pypa.io/ez_setup.py" target="_blank" rel="external">https://bootstrap.pypa.io/ez_setup.py</a></li><li>执行 python ez_setup.py</li><li>配置~/.pypirc文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[distutils]</div><div class="line">index-servers =</div><div class="line">pypi</div><div class="line"></div><div class="line">[pypi]</div><div class="line">username:name</div><div class="line">password:password</div></pre></td></tr></table></figure><ul><li>在项目内添加setup.py 并进行配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup, find_packages</div><div class="line"></div><div class="line">setup(name=<span class="string">'ananas-doc'</span>,    <span class="comment"># 包名称</span></div><div class="line">      version=<span class="string">'1.2.1'</span>,      <span class="comment"># 版本号</span></div><div class="line">      description=<span class="string">u"docs tools"</span>,  <span class="comment"># 描述</span></div><div class="line">      long_description=<span class="string">""</span>,</div><div class="line">      classifiers=[],  <span class="comment"># 参考https://pypi.python.org/pypi?%3Aaction=list_classifiers</span></div><div class="line">      keywords=<span class="string">'docs tools'</span>, <span class="comment"># 关键词</span></div><div class="line">      author=<span class="string">"Lonerusn"</span>, <span class="comment"># 作者</span></div><div class="line">      author_email=<span class="string">"lonersun@126.com"</span>,  <span class="comment"># 邮箱</span></div><div class="line">      url=<span class="string">'https://github.com/Lonersun/ananas-doc'</span>, <span class="comment"># 项目地址</span></div><div class="line">      license=<span class="string">'Apache License 2.0'</span>, <span class="comment"># 协议</span></div><div class="line">      platforms=<span class="string">'any'</span>,</div><div class="line">      packages=find_packages(), <span class="comment"># 要安装的包路径</span></div><div class="line">      zip_safe=<span class="keyword">False</span>, <span class="comment"># 默认是False，这样在每次生成egg包时都会检查项目文件的内容，确保无误。</span></div><div class="line">      include_package_data=<span class="keyword">True</span>, <span class="comment"># 是否加载包以外的文件</span></div><div class="line">      install_requires=[   <span class="comment"># 依赖的包</span></div><div class="line">          <span class="string">'sphinx&gt;=1.6.3'</span>,</div><div class="line">          <span class="string">'sphinx-rtd-theme&gt;=0.2.4'</span>,</div><div class="line">          <span class="string">'m2r&gt;=0.1.12'</span>,</div><div class="line">          <span class="string">'pyaml&gt;=3.12'</span>,</div><div class="line">          <span class="string">'pymongo&gt;=3.5.1'</span>,</div><div class="line">      ],</div><div class="line">      entry_points=&#123;  <span class="comment"># 支持动态发现服务和插件</span></div><div class="line">          <span class="string">'console_scripts'</span>: [</div><div class="line">              <span class="string">'ananas-mkdoc = ananasdoc:main'</span>,</div><div class="line">          ],</div><div class="line">          <span class="string">'gui_scripts'</span>: [</div><div class="line">              <span class="string">'ananas-mkdoc = ananasdoc:main'</span>,</div><div class="line">          ]</div><div class="line">      &#125;,</div><div class="line">)</div></pre></td></tr></table></figure><ul><li>因这个包需要加载一些模版文件，所以在同目录下创建了MANIFEST.in文件，并将引入的内容添加进去</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">include ananasdoc/template/_static/css/*.css</div><div class="line">include ananasdoc/template/_static/images/*.png</div><div class="line">include ananasdoc/template/_static/js/*.js</div><div class="line">include ananasdoc/template/_version/.note</div><div class="line">include ananasdoc/template/_version/.version</div><div class="line">include ananasdoc/template/_version/*.yml</div><div class="line">include ananasdoc/index.rst</div></pre></td></tr></table></figure><h6 id="3-打包上传"><a href="#3-打包上传" class="headerlink" title="3. 打包上传"></a>3. 打包上传</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python setup.py sdist upload</div></pre></td></tr></table></figure><p>上传完成后可以试试效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install 包名</div></pre></td></tr></table></figure><p>setup.py 可参考 <a href="https://github.com/Lonersun/ananas-doc/blob/master/setup.py" target="_blank" rel="external">https://github.com/Lonersun/ananas-doc/blob/master/setup.py</a></p><p>详细介绍：<a href="https://docs.python.org/2/distutils/setupscript.html" target="_blank" rel="external">https://docs.python.org/2/distutils/setupscript.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Pip 是Python常用的包管理工具，那么怎样将自己开发的包上传到PyPI源供他人使用呢？之前做过一个基于Sphinx、MarkDown生成文档的脚本docs.lonersun.com 最近稍作整理，为提高使用体验决定将其提交到PyPI源，以此文档作为使用
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MongoDb索引使用一常用命令</title>
    <link href="https://blog.lonersun.com/2017/10/12/MongoDb%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E4%B8%80%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.lonersun.com/2017/10/12/MongoDb索引使用一常用命令/</id>
    <published>2017-10-12T12:03:07.000Z</published>
    <updated>2017-10-21T11:34:15.870Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文将以集合order为例，列举常用的索引命令。</strong></p><h2 id="1-查看索引："><a href="#1-查看索引：" class="headerlink" title="1. 查看索引："></a>1. 查看索引：</h2><h3 id="1-1-查看集合中的索引："><a href="#1-1-查看集合中的索引：" class="headerlink" title="1.1 查看集合中的索引："></a>1.1 查看集合中的索引：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.COLLECTION_NAME.getIndexes()</div></pre></td></tr></table></figure><p><em>例：获取集合order的索引:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ db.order.getIndexes()</div><div class="line">[</div><div class="line">&#123;</div><div class="line"><span class="string">"v"</span> : 1,</div><div class="line"><span class="string">"key"</span> : &#123;</div><div class="line"><span class="string">"_id"</span> : 1</div><div class="line">&#125;,</div><div class="line"><span class="string">"name"</span> : <span class="string">"_id_"</span>,</div><div class="line"><span class="string">"ns"</span> : <span class="string">"snack.order"</span></div><div class="line">&#125;</div><div class="line">]</div><div class="line">&gt;</div></pre></td></tr></table></figure><ul><li><p>我们可以看到Mongo自动创建了一条名为<em>id</em>的索引;</p></li><li><p>_id索引：是绝大多数集合默认建立的索引，对于每个插入的数据，MongoDB都会自动生成一条唯一的_id字段</p></li></ul><h3 id="1-2-查看集合中的索引大小"><a href="#1-2-查看集合中的索引大小" class="headerlink" title="1.2 查看集合中的索引大小:"></a>1.2 查看集合中的索引大小:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.COLLECTION_NAME.totalIndexSize()</div></pre></td></tr></table></figure><p><em>例：获取集合order索引的大小</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ db.order.totalIndexSize()</div><div class="line">16834560</div></pre></td></tr></table></figure><h2 id="2-创建索引："><a href="#2-创建索引：" class="headerlink" title="2. 创建索引："></a>2. 创建索引：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.COLLECTION_NAME.ensureIndex(keys[,options])</div></pre></td></tr></table></figure><h3 id="2-1-普通索引"><a href="#2-1-普通索引" class="headerlink" title="2.1 普通索引:"></a>2.1 普通索引:</h3><p><strong>为集合中的某个字段创建索引</strong></p><p><em>例：为order创建key为state顺序为倒序的索引（其中1：生序，-1：降序）</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;<span class="string">"state"</span>:-1&#125;)</div><div class="line">&#123;</div><div class="line"><span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>,</div><div class="line"><span class="string">"numIndexesBefore"</span> : 1,</div><div class="line"><span class="string">"numIndexesAfter"</span> : 2,</div><div class="line"><span class="string">"ok"</span> : 1</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-2-复合索引："><a href="#2-2-复合索引：" class="headerlink" title="2.2 复合索引："></a>2.2 复合索引：</h3><p><strong>为多个字段联合创建索引</strong></p><p><em>例：为order创建state、shop_id 均为倒序的复合索引</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;<span class="string">"state"</span>:-1, <span class="string">"shop_id"</span>:-1&#125;)</div><div class="line">&#123;</div><div class="line"><span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>,</div><div class="line"><span class="string">"numIndexesBefore"</span> : 2,</div><div class="line"><span class="string">"numIndexesAfter"</span> : 3,</div><div class="line"><span class="string">"ok"</span> : 1</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-3-文档索引："><a href="#2-3-文档索引：" class="headerlink" title="2.3 文档索引："></a>2.3 文档索引：</h3><p><strong>MongoDB可以为一个或多个字段创建索引，当字段是子文档时，同样可以创建索引。</strong></p><p><em>例：address集合中存在这样的数据</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"_id"</span> : ObjectId(<span class="string">"59a617a6b8d224d74a26ee5f"</span>),</div><div class="line">    <span class="string">"city_name"</span> : <span class="string">"北京市"</span>,</div><div class="line">    <span class="string">"bd_poi"</span> : [</div><div class="line">        116.391036665036,</div><div class="line">        40.0055065248079</div><div class="line">    ],</div><div class="line">    <span class="string">"address"</span> : <span class="string">"北京市朝阳区大屯路风林绿洲21号楼3单元207室"</span>,</div><div class="line">    <span class="string">"area_info"</span> : &#123;</div><div class="line">        <span class="string">"area_id"</span> : <span class="string">"599ea10499826905c38f924a"</span>,</div><div class="line">        <span class="string">"area_name"</span> : <span class="string">"亚运村"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以为子文档创建如下索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.address.ensureIndex(&#123;<span class="string">"area_info"</span>:1&#125;)</div></pre></td></tr></table></figure><p><strong>注意：</strong>查询时子文档的字段顺序要和查询顺序保持一致，否则不会命中索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 会命中索引</span></div><div class="line">db.address.find(&#123;area_info:&#123;area_id:<span class="string">"599ea10499826905c38f924a"</span>, area_name:<span class="string">"亚运村"</span>&#125;&#125;)</div><div class="line"></div><div class="line"><span class="comment"># 不会命中索引</span></div><div class="line">db.address.find(&#123;area_info:&#123;area_name:<span class="string">"亚运村"</span>,area_id:<span class="string">"599ea10499826905c38f924a"</span>&#125;&#125;)</div></pre></td></tr></table></figure><h3 id="2-4-唯一索引"><a href="#2-4-唯一索引" class="headerlink" title="2.4 唯一索引"></a>2.4 唯一索引</h3><p><strong>unique: 建立的索引是否唯一。指定为true创建唯一索引。默认值为false。</strong></p><p><em>例：为商家订单ID(org_order_id)创建唯一索引</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;<span class="string">"org_order_id"</span>:-1&#125;, &#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</div></pre></td></tr></table></figure><p><strong>dropDups: 在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false。</strong></p><p><em>例：为商家订单ID(org_order_id)创建唯一索引,并且删除重复记录</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;<span class="string">"org_order_id"</span>:-1&#125;, &#123;<span class="string">"unique"</span>:<span class="literal">true</span>, <span class="string">"dropDups"</span>: <span class="literal">true</span>&#125;)</div></pre></td></tr></table></figure><h3 id="2-5-过期索引"><a href="#2-5-过期索引" class="headerlink" title="2.5 过期索引"></a>2.5 过期索引</h3><p><strong>在一段时间后会过期的索引，在索引过期后，相应的数据会被删除，适用于 用户登陆信息，日志</strong></p><p><em>例：为集合log创建过期索引，过期时间为10s</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 创建索引</span></div><div class="line">$ db.log.ensureIndex(&#123;<span class="string">"time"</span>:1&#125;, &#123;expireAfterSeconds:10&#125;)</div><div class="line">&#123;</div><div class="line"><span class="string">"createdCollectionAutomatically"</span> : <span class="literal">true</span>,</div><div class="line"><span class="string">"numIndexesBefore"</span> : 1,</div><div class="line"><span class="string">"numIndexesAfter"</span> : 2,</div><div class="line"><span class="string">"ok"</span> : 1</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 插入一条数据</span></div><div class="line">$ db.log.insert(&#123;<span class="string">"time"</span>:new Date()&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</div><div class="line"></div><div class="line"><span class="comment"># 查询</span></div><div class="line">$ db.log.find()</div><div class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"59c77ee20a61da85ebc8ed0f"</span>), <span class="string">"time"</span> : ISODate(<span class="string">"2017-09-24T09:46:10.359Z"</span>) &#125;</div><div class="line"></div><div class="line"><span class="comment"># 大概一分钟后查询，可看到之前插入的数据已不存在</span></div><div class="line">$ db.log.find()</div></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li><p>a. 存储在过期索引字段的值必须是指定的时间类型，必须是ISODate或者ISODate数组，不能使用时间戳，否则不能自动删除。</p><p>  <em>例如：db.log.insert({time:1})这种是不能被自动删除的。</em></p></li><li><p>b. 如果指定了ISODate数组，则按照最小的时间进行删除。</p></li><li><p>c. 过期索引不能是复合索引。因为不能指定两个过期时间。</p></li><li><p>d. 删除时间是不精确的。删除过程是由MongoDB的后台进程每60s跑一次的，而且删除也需要一定时间，所以存在误差。</p></li></ul><h3 id="2-6-设定索引名称"><a href="#2-6-设定索引名称" class="headerlink" title="2.6 设定索引名称"></a>2.6 设定索引名称</h3><p><strong>name：</strong> 索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。</p><p><em>例：在后台创建索引，并指定索引名称为order_state</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;&quot;state&quot;:1&#125;, &#123;background: true, &quot;name&quot;:&quot;order_state&quot;&#125;)</div></pre></td></tr></table></figure><h3 id="2-7-指定以后台方式创建索引"><a href="#2-7-指定以后台方式创建索引" class="headerlink" title="2.7 指定以后台方式创建索引"></a>2.7 指定以后台方式创建索引</h3><p><strong>建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 “background” 可选参数。 “background” 默认值为false。</strong></p><p><em>例：在后台创建索引</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.ensureIndex(&#123;&quot;state&quot;:1&#125;, &#123;background: true&#125;)</div></pre></td></tr></table></figure></p><h2 id="3-强制使用索引"><a href="#3-强制使用索引" class="headerlink" title="3. 强制使用索引"></a>3. 强制使用索引</h2><p><strong>在MongoDB的查询中，如果查询字段中的一个或几个字段已经创建了索引，我们可以使用hint()函数来强制使用索引。hint()在查询中是非常有效的一种优化手段。</strong></p><p><em>例：强制使用索引 {“org_order_id”: 1} 进行查询</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.find(&#123;&quot;org_order_id&quot;: &quot;123&quot;&#125;).hint(&#123;&quot;org_order_id&quot;: 1&#125;)</div></pre></td></tr></table></figure></p><h2 id="4-删除索引"><a href="#4-删除索引" class="headerlink" title="4. 删除索引:"></a>4. 删除索引:</h2><h3 id="4-1-删除单个索引"><a href="#4-1-删除单个索引" class="headerlink" title="4.1 删除单个索引:"></a>4.1 删除单个索引:</h3><p><em>例：删除名为state_1的索引</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.dropIndex(&quot;state_1&quot;)</div></pre></td></tr></table></figure></p><h3 id="4-2-删除集合所有索引"><a href="#4-2-删除集合所有索引" class="headerlink" title="4.2 删除集合所有索引:"></a>4.2 删除集合所有索引:</h3><p><em>例：删除集合order的所有索引</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ db.order.dropIndexes()</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;本文将以集合order为例，列举常用的索引命令。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-查看索引：&quot;&gt;&lt;a href=&quot;#1-查看索引：&quot; class=&quot;headerlink&quot; title=&quot;1. 查看索引：&quot;&gt;&lt;/a&gt;1. 查看索引：&lt;/h2&gt;&lt;h
      
    
    </summary>
    
    
  </entry>
  
</feed>
